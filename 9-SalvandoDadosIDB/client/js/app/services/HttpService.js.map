{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;IAAaA,W,WAAAA,W;;;;;;;sCAEKC,G,EAAK;AACf,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AAEL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFH,CAAP;AAGH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAS,EAAC,gBAAgB,kBAAjB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;;AAHQ,aAAX,EAMNH,IANM,CAMD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aANC,CAAP;AAOH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n    \n    get(url) {\n        \n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n    \n    post(url, dado) {\n\n        return fetch(url, {\n            headers: {'Content-Type': 'application/json'},\n            method: 'POST',\n            body: JSON.stringify(dado)            \n\n        })\n        .then(res => this._handleErrors(res));\n    }\n}"]}